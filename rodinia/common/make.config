# CUDA toolkit installation path
CUDA_DIR = /usr/local/cuda

# CUDA toolkit libraries
CUDA_LIB_DIR := $(CUDA_DIR)/lib
ifeq ($(shell uname -m), x86_64)
     ifeq ($(shell if test -d $(CUDA_DIR)/lib64; then echo T; else echo F; fi), T)
     	CUDA_LIB_DIR := $(CUDA_DIR)/lib64
     endif
endif

# CUDA SDK installation path
#SDK_DIR = $(HOME)/NVIDIA_GPU_Computing_SDK/C
SDK_DIR = /usr/local/cuda-5.5/samples/
#SDK_DIR =/if10/kw5na/NVIDIA_CUDA_Computing_SDK4/C

# OPENCL

# NVIDIA_DIR

# OPENCL_DIR =/if10/kw5na/NVIDIA_GPU_Computing_SDK4
# OPENCL_INC = $(OPENCL_DIR)/OpenCL/common/inc
# OPENCL_LIB = $(OPENCL_DIR)/OpenCL/common/lib -lOpenCL

OPENCL_DIR =$(CUDA_DIR)
OPENCL_INC = $(OPENCL_DIR)/include/CL
OPENCL_LIB = $(OPENCL_DIR)/lib64 -lOpenCL


# AMD_DIR
#OPENCL_DIR = /if10/kw5na/Packages/AMD-APP-SDK-v2.8-RC-lnx64
#OPENCL_INC = $(OPENCL_DIR)/include/ 
#OPENCL_LIB = $(OPENCL_DIR)/lib/x86_64/ -lOpenCL
#ifeq ($(shell uname -m), x86_64)
#     ifeq ($(shell if test -d $(OPENCL_DIR)/lib/x86_64/; then echo T; else echo F; fi), T)
#     	OPENCL_LIB = $(OPENCL_DIR)/lib/x86_64/
#     endif
#endif

#SYCL
DEVICE = CPU # Available: NVIDIA_GPU, INTEL_GPU, CPU

SYCL_ROOT = ~/sycl_workspace/llvm/build
SYCL_INCLUDE_DIR = ${SYCL_ROOT}/lib/clang/14.0.0/include/
DPCT_INCLUDE_DIR = /media/user/b8e12bed-ceff-42c2-a0fb-4c1f513c13c6/oneAPI/dpcpp-ct/latest/include/
SYCL_LIB = ${SYCL_ROOT}/lib/libsycl.so
SYCL_FLAGS = -fsycl -D$(DEVICE)

ifeq ($(DEVICE), NVIDIA_GPU)
     SYCL_FLAGS += -fsycl-targets=nvptx64-nvidia-cuda
endif